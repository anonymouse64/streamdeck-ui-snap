name: streamdeck-ui
# TODO: update to core20 when the kde-neon extension works for core20 snaps
base: core18
adopt-info: streamdeck-ui
summary: A service, Web Interface, and UI for using a Stream Deck with your computer
description: |
  A Linux compatible UI for the Elgato Stream Deck.
  Key Features
  * Linux Compatible: Enables usage of all Stream Deck devices on Linux without needing to code.
  * Multi-device: Enables connecting and configuring multiple Stream Deck devices on one computer.
  * Brightness Control: Supports controlling the brightness from both the configuration UI and buttons on the device itself.
  * Configurable Button Display: Icons + Text, Icon Only, and Text Only configurable per button on the Stream Deck.
  * Multi-Action Support: Run commands, write text and press hotkey combinations at the press of a single button on your Stream Deck.
  * Button Pages: streamdeck_ui supports multiple pages of buttons and dynamically setting up buttons to switch between those pages.
  * Auto Reconnect: Automatically and gracefully reconnects, in the case the device is unplugged and replugged in.
  * Import/Export: Supports saving and restoring Stream Deck configuration.
  * Communication with the Streamdeck is powered by the Python Elgato Stream Deck Library.

license: MIT

grade: stable
confinement: strict

apps:
  streamdeck-ui:
    command: bin/streamdeck
    extensions:
      - kde-neon
    plugs:
      - home
      - removable-media
      - raw-usb
      - system-observe
      - hardware-observe

parts:
  streamdeck-ui:
    plugin: python
    source: https://github.com/timothycrosley/streamdeck-ui.git
    build-packages:
      - libudev-dev
      - libusb-1.0-0-dev
    # to get the version number out of the pyproject.toml file
    build-snaps:
      - remarshal
      - jq

    # TODO: figure out which set of python-packages + apt packages should be used,
    # with libhidapi-hidraw0, streamdeck-ui complains:
    # 'The libhidapi-hidraw0 backend is currently blacklisted for StreamDeck devices.'

    # stage-packages:
    #   - libhidapi-hidraw0
    python-packages:
      - hid

    override-build: |
      # install pip manually in the build environment so we can install dephell
      # and use it to convert the poetry based pyproject.yoml to setuppy, which
      # snapcraft's python plugin can then build by itself
      PYTHONHOME=$SNAPCRAFT_PART_INSTALL/usr PYTHONUSERBASE=$SNAPCRAFT_PART_INSTALL $SNAPCRAFT_PART_INSTALL/usr/bin/python3 -m pip install --user pip==20.1
      PYTHONHOME=$SNAPCRAFT_PART_INSTALL/usr PYTHONUSERBASE=$SNAPCRAFT_PART_INSTALL $SNAPCRAFT_PART_INSTALL/usr/bin/python3 -m pip install --user dephell[full]
      PYTHONHOME=$SNAPCRAFT_PART_INSTALL/usr PYTHONUSERBASE=$SNAPCRAFT_PART_INSTALL dephell deps convert --from-path pyproject.toml --from-format poetry --to-path setup.py --to-format setuppy
      snapcraftctl build

      # meh this is a bit silly and over-engineered but works properly to set 
      # the version of the project
      # we have to use `env -u ...` here due to https://bugs.launchpad.net/snapcraft/+bug/1911062
      snapcraftctl set-version "$(env -u SNAPCRAFT_PART_INSTALL -u SNAPCRAFT_STAGE -- /snap/bin/toml2json $SNAPCRAFT_PART_BUILD/pyproject.toml | /snap/bin/jq -r '.tool.poetry.version')"
